cmake_minimum_required(VERSION 3.22.1)

project(LibreOfficeSdkExample CXX)

if(MSVC)
    set(SDK_INCLUDE_DIR  "C:\\cygwin\\home\\user\\lode\\dev\\core\\instdir\\sdk\\include"  CACHE STRING  "OO_SDK_HOME/include")
    set(SDK_LIBRARY_DIR  "C:\\cygwin\\home\\user\\lode\\dev\\core\\instdir\\sdk\\lib"      CACHE STRING  "OO_SDK_HOME/lib")
    set(SDK_BINARY_DIR   "C:\\cygwin\\home\\user\\lode\\dev\\core\\instdir\\sdk\\bin"      CACHE STRING  "OO_SDK_HOME/bin")
    set(SDK_PROGRAM_DIR  "C:\\cygwin\\home\\user\\lode\\dev\\core\\instdir\\program"       CACHE STRING  "OO_SDK_URE_LIB_DIR")
    set(SDK_LIBRARIES    "isalhelper.lib" "isal.lib" "ipurpenvhelper.lib" "icppuhelper.lib" "icppu.lib")
else()
    set(SDK_INCLUDE_DIR  "/usr/lib/libreoffice/sdk/include"  CACHE STRING  "OO_SDK_HOME/include")
    set(SDK_LIBRARY_DIR  "/usr/lib/libreoffice/sdk/lib"      CACHE STRING  "OO_SDK_HOME/lib")
    set(SDK_BINARY_DIR   "/usr/lib/libreoffice/sdk/bin"      CACHE STRING  "OO_SDK_HOME/bin")
    set(SDK_PROGRAM_DIR  "/usr/lib/libreoffice/program"      CACHE STRING  "OO_SDK_URE_LIB_DIR")   
    set(SDK_LIBRARIES    "uno_sal" "uno_salhelpergcc3" "uno_purpenvhelpergcc3" "uno_cppu" "uno_cppuhelpergcc3")
endif()

message(STATUS "Generating headers using cppumaker")
execute_process(COMMAND "${SDK_BINARY_DIR}/cppumaker" -Gc -O${PROJECT_SOURCE_DIR}/include "${SDK_PROGRAM_DIR}/types.rdb" "${SDK_PROGRAM_DIR}/types/offapi.rdb")

if(MSVC)
    set(CMAKE_CXX_FLAGS            "${CMAKE_CXX_FLAGS} /MDd /Zm500 /Zc:wchar_t /wd4251 /wd4275 /wd4290 /wd4675 /wd4786 /wd4800 /GR /EHa")
else()
    set(CMAKE_CXX_FLAGS            "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wextra -pedantic -fvisibility=hidden -fpic")
    set(CMAKE_CXX_FLAGS_DEBUG      "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG} -g")
    set(CMAKE_CXX_FLAGS_RELEASE    "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE} -O2")
    set(CMAKE_SHARED_LINKER_FLAGS  "-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--no-whole-archive")
    set(CMAKE_EXE_LINKER_FLAGS     "-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--no-whole-archive")
endif()

if(MSVC)
    add_definitions(-DWIN32 -DWNT -D_DLL -DCPPU_ENV=mscx)
else()
    add_compile_definitions(UNX)
    add_compile_definitions(DGCC)
    add_compile_definitions(LINUX)
    add_compile_definitions(DCPPU_ENV=gcc3)
endif()

include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${SDK_INCLUDE_DIR})
link_directories(${SDK_LIBRARY_DIR})

add_subdirectory(Drawing)
add_subdirectory(GUI)
add_subdirectory(OfficeDev)
add_subdirectory(FirstSteps)
add_subdirectory(ImplHelper)
add_subdirectory(ListServices)
add_subdirectory(ProfUNO)
add_subdirectory(SimpleWindow)
add_subdirectory(WeakObject)
